amends "package://schema.kdeps.com/core@0.2.7#/Resource.pkl"

actionID = "HTTPClient"
name = "HTTP Client for the Weather API"
description = "This resource allows for making API requests to the Weather API."
category = ""
requires {
        "llmInput"
}
run {
        skipCondition {
                // Conditions under which the execution of this resource should be skipped.
                // If any evaluated condition returns true, the resource execution will be bypassed.
                // "@(request.path)" != "/api/v1/whois" && "@(request.method)" != "GET"
        }
        preflightCheck {
                validations {
                        // This section expects boolean validations.
                        // If any validation returns false, an exception will be thrown before proceeding to the next step.
                        // "@(request.header("X-API-KEY"))" != ""
                }
                // Custom error message and code to be used if the preflight check fails.
                error {
                        code = 404
                        message = "Header X-API-KEY not found in request!"
                }
        }

        // Initiates an HTTP client request for this resource.
        //
        // The HTTP resource provides the following helper functions:
        //
        // - "@(client.resource("ResourceID"))"
        // - "@(client.responseBody("ResourceID"))"
        // - "@(client.responseHeader("ResourceID", "HEADER"))"
        //
        // For example, to use these in your resource, you can define a local variable like this:
        //
        // local bearerToken = "@(client.responseHeader("ResourceID", "Bearer"))"
        // You can then access the value using "@(bearerToken)".
        //
        // The "@(...)" syntax enables lazy evaluation, ensuring that values are
        // retrieved only after the result is ready.
        //
        // Note: Each resource is restricted to a single dedicated action. Combining multiple
        // actions within the same resource is not allowed.
        local JSONPath = "@(llm.file("llmInput"))"

        local JSONData = "@(read?("\(JSONPath)")?.text)"

        HTTPClient {
                method = "GET"
                url = "https://api.open-meteo.com/v1/forecast"
                data {}
                params {
                        ["latitude" ] = "@(document.JSONParser(JSONData)?.latitude_str)"
                        ["longitude"] = "@(document.JSONParser(JSONData)?.longitude_str)"
                        ["timezone "] = "@(document.JSONParser(JSONData)?.timezone_str)"
                        ["current_weather"] = "true"
                        ["forecast_days"] = "1"
                        ["hourly"] = "temperature_2m,precipitation,wind_speed_10m"
                        ["daily"] = "temperature_2m_max,temperature_2m_min,precipitation_sum"
                }
                headers {
                        // Headers to be included in the HTTP request.
                }
                // Timeout duration in seconds. This specifies when to terminate the request.
                timeoutDuration = 60
        }
}
