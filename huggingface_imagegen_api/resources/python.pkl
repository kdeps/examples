amends "package://schema.kdeps.com/core@0.2.42#/Resource.pkl"

ActionID = "pythonResource"
Name = "Python Resource"
Description = "This resource creates a python script session."
Category = ""
Requires {
        "execResource"
}
Run {
        SkipCondition {
                // Conditions under which the execution of this resource should be skipped.
                // If any evaluated condition returns true, the resource execution will be bypassed.
        }
        PreflightCheck {
                Validations {
                        // This section expects boolean validations.
                        // If any validation returns false, an exception will be thrown before proceeding to the next step.
                        //
                        // For example, this expects that the 'file.txt' is in the 'data' folder.
                        // All data files are mapped from 'data/file.txt' to 'data/<agentName>/<agentVersion>/file.txt'.
                        // read("file:/agent/workflow/data/%s/1.0.0/file.txt").text != "" && read("file:/agent/workflow/data/%s/1.0.0/file.txt").base64 != ""
                }
                // Custom error message and code to be used if the preflight check fails.
                Error {
                        Code = 500
                        Message = "Data file file.txt not found!"
                }
        }

        // Initiates a shell session for executing commands within this resource. Any packages
        // defined in the workflow are accessible here.
        //
        // The exec resource provides the following helper functions:
        //
        // - "@(python.resource("ResourceID"))"
        // - "@(python.stderr("ResourceID"))"
        // - "@(python.stdout("ResourceID"))"
        // - "@(python.exitCode("ResourceID"))"
        //
        // To use these in your resource, you can define a local variable like this:
        //
        // local successExec = "@(python.exitCode("ResourceID"))"
        // You can then reference the value using "@(successExec)".
        //
        // If you need to access a file in your resource, you can use PKL's read("file") API like this:
        // "@(read("file"))".
        //
        // The "@(...)" syntax enables lazy evaluation, ensuring that values are
        // retrieved only after the result is ready.
        //
        // Note: Each resource is restricted to a single dedicated targetActionID. Combining multiple
        // targetActionIDs within the same resource is not allowed.

        local pythonScriptPath = "@(data.filepath("huggingface_imagegen_api/1.0.0", "sdxl_base_1_0.py"))"
        local pythonScript = "@(read?("\(pythonScriptPath)")?.text)"

        Python {
                // Specifies the conda environment in which this Python script will execute, if Anaconda is
                // installed.
                CondaEnvironment = "base"

                Script =
"""
\(pythonScript)
"""
                Env {
                        ["PROMPT"] = "@(request.params("q"))"
                        ["HF_TOKEN"] = read("env:HF_TOKEN")
                        ["HF_HOME"] = read("env:HF_HOME")
                }

                // Timeout duration in seconds. This specifies when to terminate the shell exec.
                TimeoutDuration = 0.s
        }
}
