amends "package://schema.kdeps.com/core@0.2.27#/Resource.pkl"

actionID = "execResource"
name = "Exec Resource"
description = "This resource creates a shell session."
category = ""
requires {
        // Define the ID of any dependency resource that must be executed before this resource.
}
run {
        skipCondition {
                "@(skip.ifFolderExists("file:/.kdeps//huggingface"))"
        }
        preflightCheck {
                validations {
                        // This section expects boolean validations.
                        // If any validation returns false, an exception will be thrown before proceeding to the next step.
                        //
                        // For example, this expects that the 'file.txt' is in the 'data' folder.
                        // All data files are mapped from 'data/file.txt' to 'data/<agentName>/<agentVersion>/file.txt'.
                        // read("file:/agent/workflow/data/%s/1.0.0/file.txt").text != "" && read("file:/agent/workflow/data/%s/1.0.0/file.txt").base64 != ""
                }
                // Custom error message and code to be used if the preflight check fails.
                error {
                        code = 500
                        message = "Data file file.txt not found!"
                }
        }

        // Initiates a shell session for executing commands within this resource. Any packages
        // defined in the workflow are accessible here.
        //
        // The exec resource provides the following helper functions:
        //
        // - "@(exec.resource("ResourceID"))"
        // - "@(exec.stderr("ResourceID"))"
        // - "@(exec.stdout("ResourceID"))"
        // - "@(exec.exitCode("ResourceID"))"
        //
        // To use these in your resource, you can define a local variable like this:
        //
        // local successExec = "@(exec.exitCode("ResourceID"))"
        // You can then reference the value using "@(successExec)".
        //
        // If you need to access a file in your resource, you can use PKL's read("file") API like this:
        // "@(read("file"))".
        //
        // The "@(...)" syntax enables lazy evaluation, ensuring that values are
        // retrieved only after the result is ready.
        //
        // Note: Each resource is restricted to a single dedicated targetActionID. Combining multiple
        // targetActionIDs within the same resource is not allowed.
        exec {
                command =
"""
huggingface-cli login --token $HF_TOKEN
# huggingface-cli download stabilityai/stable-diffusion-3.5-large
huggingface-cli download stabilityai/stable-diffusion-xl-base-1.0
"""
                env {
                        ["HF_TOKEN"] = read("env:HF_TOKEN")
                        ["HF_HOME"] = read("env:HF_HOME")
                }
                // Timeout duration in seconds. This specifies when to terminate the shell exec.
                timeoutDuration = 0.s
        }
}
